{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\leoul\\\\Dropbox\\\\My PC (Medusa)\\\\WashU\\\\classes\\\\Spring 2022\\\\CSE 330S Rapid Prototyping\\\\creativeproject-425415-501412\\\\my-app\\\\src\\\\Calendar.jsx\";\nimport React, { Component } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction getDate() {\n  let date = new Date(Date.UTC(year, month, day));\n  return date;\n}\n\nclass Calendar extends Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\" \", getDate()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 17\n      }, this)\n    }, void 0, false);\n  }\n\n}\n\nexport default Calendar;\n/*\r\nfunction populateCalendar(month = currentMonth, year = currentYear, boot = true) {\r\n\r\n    let calendar = document.getElementById(\"calendar\");\r\n    let monthObject = document.getElementById(\"month\");\r\n    let yearObject = document.getElementById(\"year\");\r\n\r\n    if (boot == false) {\r\n        calendar.innerHTML = \"\";\r\n    }\r\n\r\n    // Higlighting today's date in green\r\n    let actualDate = new Date().toISOString().slice(0, 10);\r\n\r\n    let day = 1;\r\n    for (day; day <= 31; day++) {\r\n\r\n\r\n\r\n        let date = new Date(Date.UTC(year, month, day));\r\n        let dayNum = Intl.DateTimeFormat(\"en-US\", {\r\n            day: \"numeric\"\r\n        }).format(date);\r\n        let dayName = Intl.DateTimeFormat(\"en-US\", {\r\n            weekday: \"short\"\r\n        }).format(date);\r\n\r\n        // Fixing the weird February bug lol xD\r\n        if (day == 15) {\r\n            let monthName = Intl.DateTimeFormat(\"en-US\", {month: \"long\"}).format(date);\r\n            monthObject.innerHTML = monthName;\r\n        }\r\n\r\n        let yearNum = Intl.DateTimeFormat(\"en-US\", {\r\n            year: \"numeric\"\r\n        }).format(date);\r\n\r\n        yearObject.innerHTML = yearNum;\r\n\r\n        // dateIdentifier set up to already be a correctly formatted SQL date object \r\n        let dateIdentifier = \"\";\r\n        dateIdentifier = dateIdentifier.concat(date.getFullYear(), \"-\", String(date.getMonth() + 1).padStart(2, '0'), \"-\", String(date.getDate()).padStart(2, '0'));\r\n\r\n        calendar.insertAdjacentHTML(\"beforeend\", `<div class = \"day lightText\" id = ${dateIdentifier}> ${dayName} \r\n            <p class = \"dayNum\"> ${dayNum} </p> </div>`);\r\n\r\n        // Higlighting today's date in green\r\n        if (actualDate == dateIdentifier) {\r\n            let today = document.getElementById(dateIdentifier);\r\n            console.log(today);\r\n            today.style.backgroundColor = \"#90ee90\";\r\n            today.style.color = \"#000000\";\r\n        }\r\n\r\n    }\r\n\r\n    lastDisplayedMonth = month;\r\n    lastDisplayedYear = year;\r\n\r\n    addDayListeners();\r\n}\r\n\r\n*/","map":{"version":3,"sources":["C:/Users/leoul/Dropbox/My PC (Medusa)/WashU/classes/Spring 2022/CSE 330S Rapid Prototyping/creativeproject-425415-501412/my-app/src/Calendar.jsx"],"names":["React","Component","getDate","date","Date","UTC","year","month","day","Calendar","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;;AAEA,SAASC,OAAT,GAAmB;AACf,MAAIC,IAAI,GAAG,IAAIC,IAAJ,CAASA,IAAI,CAACC,GAAL,CAASC,IAAT,EAAeC,KAAf,EAAsBC,GAAtB,CAAT,CAAX;AACA,SAAOL,IAAP;AACH;;AAED,MAAMM,QAAN,SAAuBR,SAAvB,CAAiC;AAC7BS,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA,6BACI;AAAA,wBAAKR,OAAO,EAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ,qBADJ;AAKH;;AAP4B;;AAWjC,eAAeO,QAAf;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nfunction getDate() {\r\n    let date = new Date(Date.UTC(year, month, day));\r\n    return date\r\n}\r\n\r\nclass Calendar extends Component {\r\n    render() {\r\n        return(\r\n            <>\r\n                <p> {getDate()}</p>\r\n            </>\r\n            );\r\n    }\r\n\r\n}\r\n\r\nexport default Calendar;\r\n\r\n/*\r\nfunction populateCalendar(month = currentMonth, year = currentYear, boot = true) {\r\n\r\n    let calendar = document.getElementById(\"calendar\");\r\n    let monthObject = document.getElementById(\"month\");\r\n    let yearObject = document.getElementById(\"year\");\r\n\r\n    if (boot == false) {\r\n        calendar.innerHTML = \"\";\r\n    }\r\n\r\n    // Higlighting today's date in green\r\n    let actualDate = new Date().toISOString().slice(0, 10);\r\n\r\n    let day = 1;\r\n    for (day; day <= 31; day++) {\r\n\r\n\r\n\r\n        let date = new Date(Date.UTC(year, month, day));\r\n        let dayNum = Intl.DateTimeFormat(\"en-US\", {\r\n            day: \"numeric\"\r\n        }).format(date);\r\n        let dayName = Intl.DateTimeFormat(\"en-US\", {\r\n            weekday: \"short\"\r\n        }).format(date);\r\n\r\n        // Fixing the weird February bug lol xD\r\n        if (day == 15) {\r\n            let monthName = Intl.DateTimeFormat(\"en-US\", {month: \"long\"}).format(date);\r\n            monthObject.innerHTML = monthName;\r\n        }\r\n\r\n        let yearNum = Intl.DateTimeFormat(\"en-US\", {\r\n            year: \"numeric\"\r\n        }).format(date);\r\n\r\n        yearObject.innerHTML = yearNum;\r\n\r\n        // dateIdentifier set up to already be a correctly formatted SQL date object \r\n        let dateIdentifier = \"\";\r\n        dateIdentifier = dateIdentifier.concat(date.getFullYear(), \"-\", String(date.getMonth() + 1).padStart(2, '0'), \"-\", String(date.getDate()).padStart(2, '0'));\r\n\r\n        calendar.insertAdjacentHTML(\"beforeend\", `<div class = \"day lightText\" id = ${dateIdentifier}> ${dayName} \r\n            <p class = \"dayNum\"> ${dayNum} </p> </div>`);\r\n\r\n        // Higlighting today's date in green\r\n        if (actualDate == dateIdentifier) {\r\n            let today = document.getElementById(dateIdentifier);\r\n            console.log(today);\r\n            today.style.backgroundColor = \"#90ee90\";\r\n            today.style.color = \"#000000\";\r\n        }\r\n\r\n    }\r\n\r\n    lastDisplayedMonth = month;\r\n    lastDisplayedYear = year;\r\n\r\n    addDayListeners();\r\n}\r\n\r\n*/"]},"metadata":{},"sourceType":"module"}